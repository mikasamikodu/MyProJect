package com.atguigu.springboot;

import com.atguigu.springboot.bean.Book;
import org.junit.jupiter.api.Test;
import org.springframework.amqp.core.AmqpAdmin;
import org.springframework.amqp.core.Binding;
import org.springframework.amqp.core.DirectExchange;
import org.springframework.amqp.core.Queue;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

@SpringBootTest
class Springboot02AmqpApplicationTests {

    @Autowired
    RabbitTemplate rabbitTemplate;

    @Autowired
    AmqpAdmin amqpAdmin;

    @Test
    void contextLoads() {
        //message需要自己构造一个；消息体内容和消息头
        //rabbitTemplate.send(exchange, routeKey, message);

        //object默认当成消息体，只需要发送的对象，自动序列化发送给rabbitmq
//        rabbitTemplate.convertAndSend(exchange, routeKey, object);
        Map<String, Object> map = new HashMap<String, Object>();
        map.put("msg", "第一个消息");
        map.put("data", Arrays.asList("helloworld", 123, true));
        rabbitTemplate.convertAndSend("exchange.fanout", "atguigu.news", new Book("斗罗大陆", "唐家三少"));
//        rabbitTemplate.convertAndSend("exchange.direct", "atguigu.news", map);
    }

    @Test
    void receive(){
        Object convert = rabbitTemplate.receiveAndConvert("atguigu.news");
        System.out.println(convert.getClass());
        System.out.println(convert);
    }

    @Test
    void declare(){
//        amqpAdmin.declareExchange(new DirectExchange("amqpadmin.direct"));
//        amqpAdmin.declareQueue(new Queue("amqp.news", true));
//        amqpAdmin.declareBinding(new Binding("amqpadmin.direct", Binding.DestinationType.EXCHANGE, "amqpadmin.direct", "amqp.haha", null));
        amqpAdmin.deleteExchange("amqpadmin.direct");
    }
    /*

    # Generated by NetworkManager
search DHCP HOST
nameserver 222.222.222.222
nameserver 180.76.76.76

    * */
}
