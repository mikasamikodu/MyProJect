<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.manager.dao.UserMapper">

	<resultMap id="BaseResultMap" type="com.atguigu.bean.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="loginacct" property="loginacct" jdbcType="VARCHAR" />
		<result column="userpswd" property="userpswd" jdbcType="CHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="CHAR" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteBatchUser">
		delete from t_user
		where id in 
		<foreach collection="datas" open="(" close=")" separator="," item="user">
			#{user.id}
		</foreach>
	</delete>
	<!-- 配置 useGeneratedKeys="true" keyProperty="id"，可以在插入数据后将主键id返回-->
	<insert id="insert" parameterType="com.atguigu.bean.User">
		insert into t_user (loginacct, userpswd,username, email, createtime)
		values (#{loginacct,jdbcType=VARCHAR},#{userpswd,jdbcType=CHAR},
		#{username,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR}, 
		#{createtime,jdbcType=CHAR})
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.atguigu.bean.User">
		update t_user
		set
		loginacct = #{loginacct,jdbcType=VARCHAR},
		username = #{username,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select id, loginacct, userpswd, username, email,
		createtime
		from t_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, loginacct, userpswd,
		username, email, createtime
		from t_user
	</select>
	<select id="queryPermissionsByUserId" resultType="com.atguigu.bean.Permission" parameterType="int">
		SELECT DISTINCT(permission.id),permission.`pid`,permission.`name`,permission.`icon`,permission.`url`  
		FROM t_permission permission,t_role_permission rolepermission,t_role role,t_user_role userrole,t_user USER
		WHERE permission.id=rolepermission.`permissionid` AND
		      rolepermission.`roleid`=role.id AND
		      role.id=userrole.`roleid` AND 
		      userrole.`userid`=user.`id` AND 
		      user.id=#{id} order by permission.id
	</select>

	<select id="queryUserlogin" parameterType="map" resultMap="BaseResultMap">
		select id, loginacct, userpswd,
		username, email, createtime
		from t_user where loginacct=#{loginacct} and userpswd=#{userpswd}
	</select>
	<select id="queryList" resultMap="BaseResultMap">
		select id, loginacct, userpswd,username, email, createtime
		from t_user 
		<where>
			<if test="input!=null">
			loginacct like concat("%", #{input}, "%") 
			or username like concat("%", #{input}, "%") 
			or email like concat("%", #{input}, "%") 
			</if>
		</where>
		order by createtime desc
		limit #{startIndex},#{pageSize}
	</select>
	<select id="queryCount" resultType="int">
		select count(*)
		from t_user
		<where>
			<if test="input!=null">
			loginacct like concat("%", #{input}, "%") 
			or username like concat("%", #{input}, "%") 
			or email like concat("%", #{input}, "%") 
			</if>
		</where>
	</select>
<!-- 	<select id="queryList" resultMap="BaseResultMap">
		select id, loginacct, userpswd,username, email, createtime
		from t_user 
		limit #{startIndex},#{pageSize}
	</select>
	<select id="queryCount" resultType="Integer">
		select count(*)
		from t_user
	</select> -->

</mapper>